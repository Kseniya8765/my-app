{"version":3,"sources":["components/App/context.js","components/TaskList/TaskItem/Delete/Delete.jsx","components/TaskList/TaskItem/Priority/Priority.jsx","components/TaskList/TaskItem/TaskItem.jsx","components/Title/Title.jsx","components/Filter/Form/Form.jsx","components/Filter/Filter.jsx","components/TaskList/TaskList.jsx","components/Loader/Loader.jsx","components/error/ErrorBoundary.jsx","components/App/App.jsx","index.js"],"names":["TodoAppContext","createContext","Delete","id","deleteTask","useContext","className","onClick","Priority","btnContent","importantTask","TaskItem","taskName","important","active","inactiveTask","style","fontWeight","textDecoration","cursor","Title","Form","props","useState","inputAdd","setInputAdd","placeholder","value","onChange","e","target","type","disabled","addTask","Filter","inputFilterValue","displayedList","context","btnHandler","inputHandler","style2","style3","TaskList","todo","map","item","Loader","ErrorBoundary","state","hasError","error","info","console","log","this","children","Component","App","setTodo","setInputFilterValue","setDisplayedList","isLoaded","setIsLoaded","useEffect","setTimeout","filteredBtns","filter","btnsFilter","toLowerCase","includes","propsDrill","inputId","newTodo","Provider","slice","unshift","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yVACaA,EAAiBC,0B,OCIjBC,EAAS,SAAC,GAAY,IAAVC,EAAS,EAATA,GAEfC,EADQC,qBAAWL,GACnBI,WACR,OACE,wBAAQE,UAAU,QAAQC,QAAS,kBAAMH,EAAWD,IAApD,gBCJSK,G,MAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,WAAYN,EAAS,EAATA,GAE9BO,EADSL,qBAAWL,GACpBU,cAEP,OACE,wBAAQJ,UAAU,YAAYC,QAAS,kBAAMG,EAAcP,IAA3D,SACGM,MCJME,EAAW,SAAC,GAKlB,IAJLC,EAII,EAJJA,SACAT,EAGI,EAHJA,GACAU,EAEI,EAFJA,UACAC,EACI,EADJA,OAGOC,EADSV,qBAAWL,GACpBe,aAEDC,EAAQ,CACZC,YAA0B,IAAdJ,EAAqB,OAAS,SAC1CK,gBAA2B,IAAXJ,EAAkB,OAAS,eAC3CK,OAAQ,WAGJV,EAAaI,EAAY,IAAM,IAErC,OACE,sBAAKP,UAAU,WAAf,UACE,mBAAGU,MAAOA,EAAOT,QAAS,kBAAMQ,EAAaZ,IAA7C,SACGS,IAEH,cAAC,EAAD,CAAQT,GAAIA,IACZ,mBAAGG,UAAU,WAAb,SAAyBO,IACzB,cAAC,EAAD,CAAUJ,WAAYA,EAAYN,GAAIA,QC7B/BiB,G,YAAQ,WACnB,OACE,8BACE,gDCDOC,G,MAAO,SAACC,GACnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OACE,sBAAKnB,UAAU,iBAAf,UACE,uBACEoB,YAAY,MACZC,MAAOH,EACPI,SAfe,SAACC,GACpB,IAAQF,EAAUE,EAAEC,OAAZH,MACRF,EAAYE,IAcRI,KAAK,SAEP,wBAAQC,UAAWR,EAAUjB,QAbX,WACpBe,EAAMW,QAAQT,GACdC,EAAY,KAWV,sBClBOS,EAAS,SAAC,GAIhB,IAHLC,EAGI,EAHJA,iBACAF,EAEI,EAFJA,QACAG,EACI,EADJA,cAEMC,EAAUhC,qBAAWL,GACpBsC,EAA2BD,EAA3BC,WAAWC,EAAgBF,EAAhBE,aAEZvB,EAA0B,QAAlBoB,EAA0B,YAAc,GAChDI,EAA2B,WAAlBJ,EAA6B,YAAc,GACpDK,EAA2B,cAAlBL,EAAgC,YAAc,GAE7D,OACE,gCACE,cAAC,EAAD,IACA,sBAAK9B,UAAU,mBAAf,UACE,uBACEyB,KAAK,OACLL,YAAY,SACZC,MAAOQ,EACPP,SAAUW,IAEZ,gCACE,wBAAQjC,UAAWU,EAAOT,QAAS,kBAAM+B,EAAW,QAApD,iBAGA,wBAAQhC,UAAWkC,EAAQjC,QAAS,kBAAM+B,EAAW,WAArD,oBAGA,wBAAQhC,UAAWmC,EAAQlC,QAAS,kBAAM+B,EAAW,cAArD,6BAKJ,cAAC,EAAD,CAAML,QAASA,QCpCd,SAASS,EAAT,GAAuE,IAAnDC,EAAkD,EAAlDA,KAAMR,EAA4C,EAA5CA,iBAAkBF,EAA0B,EAA1BA,QAASG,EAAiB,EAAjBA,cAC1D,OACE,gCACE,cAAC,EAAD,CACED,iBAAkBA,EAClBF,QAASA,EACTG,cAAeA,IAEjB,8BACGO,EAAKC,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA4BA,GAAbA,EAAK1C,Y,UCZjB2C,EAAS,WACpB,OACE,qBAAKxC,UAAU,YAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,0BACA,0BACA,0BACA,0BACA,0BACA,kC,4BCXGyC,EAAb,4MACEC,MAAQ,CACNC,UAAU,GAFd,uDASE,SAAkBC,EAAOC,GACvBC,QAAQC,IAAIH,EAAOC,KAVvB,oBAaE,WAGE,OAFqBG,KAAKN,MAAlBC,SAEa,2CAEd,mCAAGK,KAAKhC,MAAMiC,cAlBzB,uCAKE,WACE,MAAO,CAAEN,UAAU,OANvB,GAAmCO,aCuCtBC,EAAM,WACjB,MAAwBlC,mBAAS,MAAjC,mBAAOoB,EAAP,KAAae,EAAb,KACA,EAAgDnC,mBAAS,IAAzD,mBAAOY,EAAP,KAAyBwB,EAAzB,KACA,EAA0CpC,mBAAS,IAAnD,mBAAOa,EAAP,KAAsBwB,EAAtB,KACA,EAAgCrC,oBAAS,GAAzC,mBAAOsC,EAAP,KAAiBC,EAAjB,KAUA,GARAC,qBAAU,WACRC,YAAW,WAETN,EA3CgB,CACpB,CACE9C,SAAU,cACVT,GAAI,IACJU,WAAW,EACXC,QAAQ,GAEV,CACEF,SAAU,cACVT,GAAI,IACJU,WAAW,EACXC,QAAQ,GAEV,CACEF,SAAU,cACVT,GAAI,IACJU,WAAW,EACXC,QAAQ,KA2BNgD,GAAY,KACX,OACF,KAEED,EACH,OAAO,cAAC,EAAD,IAGT,IACMI,EA1BW,SAACtB,EAAMP,GACxB,MAAsB,KAAlBA,GACkB,QAAlBA,EAD6BO,EAEX,WAAlBP,EAAmCO,EAAKuB,QAAO,SAACrB,GAAD,OAAUA,EAAK/B,UAC5C,cAAlBsB,EAAsCO,EAAKuB,QAAO,SAACrB,GAAD,OAAWA,EAAK/B,eAAtE,EAsBqBqD,CAjCR,SAAChC,EAAkBQ,GAChC,MAAyB,KAArBR,EAAgCQ,EAC7BA,EAAKuB,QAAO,SAACrB,GAAD,OACjBA,EAAKjC,SAASwD,cAAcC,SAASlC,EAAiBiC,kBA6BnCF,CAAO/B,EAAkBQ,GACAP,GA2DxCkC,EAAa,CACjB5D,cAhCoB,SAAC6D,GACrB,IAAMC,EAAU7B,EAAKC,KAAI,SAACC,GACxB,IAAQ1C,EAAkB0C,EAAlB1C,GAAIU,EAAcgC,EAAdhC,UAEZ,OAAO,2BACFgC,GADL,IAEEhC,UAAW0D,IAAYpE,GAAMU,EAAYA,OAI7C6C,EAAQc,IAuBRpE,WArBiB,SAACmE,GAClB,IAAMC,EAAU7B,EAAKuB,QAAO,SAACrB,GAG3B,OAFeA,EAAP1C,KAEMoE,KAGhBb,EAAQc,IAeRzD,aA/CmB,SAACwD,GACpB,IAAMC,EAAU7B,EAAKC,KAAI,SAACC,GACxB,IAAQ1C,EAAe0C,EAAf1C,GAAIW,EAAW+B,EAAX/B,OAEZ,OAAO,2BACF+B,GADL,IAEE/B,OAAQyD,IAAYpE,GAAMW,EAASA,OAIvC4C,EAAQc,IAsCRlC,WAbiB,SAACF,GAClBwB,EAAiBxB,IAajBG,aAVmB,SAACV,GACpB,IAAQF,EAAUE,EAAEC,OAAZH,MACRgC,EAAoBhC,KAWtB,OACE,cAAC3B,EAAeyE,SAAhB,CAAyB9C,MAAO2C,EAAhC,SACE,8BACE,cAAC,EAAD,UACE,cAAC5B,EAAD,CACET,QAtEM,SAACT,GACf,IAAMgD,EAAU7B,EAAK+B,QAErBF,EAAQG,QAAQ,CACd/D,SAAUY,EACVrB,GAAG,GAAD,OAAKwC,EAAKiC,OAAV,QACF/D,WAAW,EACXC,QAAQ,IAGV4C,EAAQc,IA6DA7B,KAAMsB,EACN7B,cAAeA,EACfD,iBAAkBA,WCnIxB0C,G,MAAcC,SAASC,eAAe,SAE5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.09cebc16.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const TodoAppContext = createContext();","import \"../Delete/delete.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useContext } from \"react\";\r\nimport { TodoAppContext } from \"../../../App/context\";\r\n\r\nexport const Delete = ({ id }) => {\r\n  const context = useContext(TodoAppContext);\r\n  const { deleteTask } = context;\r\n  return (\r\n    <button className=\"reset\" onClick={() => deleteTask(id)}>\r\n      x\r\n    </button>\r\n  );\r\n};\r\n\r\nDelete.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n","import \"../Priority/priority.scss\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext } from \"react\";\r\nimport {TodoAppContext} from '../../../App/context';\r\n\r\nexport const Priority = ({ btnContent, id }) => {\r\n  const context = useContext(TodoAppContext);\r\n  const {importantTask} = context;\r\n\r\n  return (\r\n    <button className=\"important\" onClick={() => importantTask(id)}>\r\n      {btnContent}\r\n    </button>\r\n  );\r\n};\r\n\r\nPriority.propTypes={\r\n  id: PropTypes.string.isRequired,\r\n  btnContent: PropTypes.string.isRequired\r\n}","import \"../TaskItem/item.scss\";\r\nimport { Delete } from \"../TaskItem/Delete/Delete\";\r\nimport { Priority } from \"../TaskItem/Priority/Priority\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext } from \"react\";\r\nimport {TodoAppContext} from '../../App/context';\r\n\r\nexport const TaskItem = ({\r\n  taskName,\r\n  id,\r\n  important,\r\n  active\r\n}) => {\r\n  const context = useContext(TodoAppContext);\r\n  const {inactiveTask} = context;\r\n\r\n  const style = {\r\n    fontWeight: important === true ? \"bold\" : \"normal\",\r\n    textDecoration: active === true ? \"none\" : \"line-through\",\r\n    cursor: \"pointer\"\r\n  };\r\n\r\n  const btnContent = important ? \"-\" : \"!\";\r\n\r\n  return (\r\n    <div className=\"todoItem\">\r\n      <p style={style} onClick={() => inactiveTask(id)}>\r\n        {taskName}\r\n      </p>\r\n      <Delete id={id} />\r\n      <p className=\"priority\">{important}</p>\r\n      <Priority btnContent={btnContent} id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes ={\r\n  taskName: PropTypes.string.isRequired,\r\n  id:PropTypes.string.isRequired,\r\n  important: PropTypes.bool.isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n}\r\n","import \"../Title/title.scss\";\r\n\r\nexport const Title = () => {\r\n  return (\r\n    <div>\r\n      <h1>To-Do List</h1>\r\n    </div>\r\n  );\r\n};\r\n","import \"../Form/form.scss\";\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Form = (props) => {\r\n  const [inputAdd, setInputAdd] = useState(\"\");\r\n\r\n  const inputHandler = (e) => {\r\n    const { value } = e.target;\r\n    setInputAdd(value);\r\n  };\r\n\r\n  const clearInputAdd = () => {\r\n    props.addTask(inputAdd);\r\n    setInputAdd(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <input\r\n        placeholder=\"Add\"\r\n        value={inputAdd}\r\n        onChange={inputHandler}\r\n        type=\"text\"\r\n      />\r\n      <button disabled={!inputAdd} onClick={clearInputAdd}>\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n","import \"../Filter/filter.scss\";\r\nimport { Title } from \"../Title/Title\";\r\nimport { Form } from \"../Filter/Form/Form\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useContext } from \"react\";\r\nimport {TodoAppContext} from '../App/context';\r\n\r\nexport const Filter = ({\r\n  inputFilterValue,\r\n  addTask,\r\n  displayedList\r\n}) => {\r\n  const context = useContext(TodoAppContext);\r\n  const {btnHandler,inputHandler} = context;\r\n\r\n  const style = displayedList === \"all\" ? \"activeBtn\" : \"\";\r\n  const style2 = displayedList === \"active\" ? \"activeBtn\" : \"\";\r\n  const style3 = displayedList === \"complited\" ? \"activeBtn\" : \"\";\r\n\r\n  return (\r\n    <div>\r\n      <Title />\r\n      <div className=\"filter-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={inputFilterValue}\r\n          onChange={inputHandler}\r\n        />\r\n        <div>\r\n          <button className={style} onClick={() => btnHandler(\"all\")}>\r\n            All\r\n          </button>\r\n          <button className={style2} onClick={() => btnHandler(\"active\")}>\r\n            Active\r\n          </button>\r\n          <button className={style3} onClick={() => btnHandler(\"complited\")}>\r\n            Complited\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Form addTask={addTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  inputFilterValue: PropTypes.string.isRequired,\r\n  addTask: PropTypes.func.isRequired,\r\n  displayedList: PropTypes.string.isRequired\r\n};\r\n","import { TaskItem } from \"../TaskList/TaskItem/TaskItem\";\r\nimport { Filter } from \"../Filter/Filter\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function TaskList({ todo, inputFilterValue, addTask, displayedList }) {\r\n  return (\r\n    <div>\r\n      <Filter\r\n        inputFilterValue={inputFilterValue}\r\n        addTask={addTask}\r\n        displayedList={displayedList}\r\n      />\r\n      <div>\r\n        {todo.map((item) => (\r\n          <TaskItem key={item.id} {...item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  todo: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      taskName: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      important: PropTypes.bool.isRequired,\r\n      active: PropTypes.bool.isRequired\r\n    })\r\n  ).isRequired,\r\n  inputFilterValue: PropTypes.string.isRequired,\r\n  addTask: PropTypes.func.isRequired,\r\n  displayedList: PropTypes.string.isRequired\r\n};\r\n","import \"../Loader/loader.scss\";\r\nimport React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"transition-loader\">\r\n        <div className=\"transition-loader-inner\">\r\n          <label></label>\r\n          <label></label>\r\n          <label></label>\r\n          <label></label>\r\n          <label></label>\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nexport class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n\r\n    if (hasError) return <div>Error =(</div>;\r\n\r\n    return <>{this.props.children}</>;\r\n  }\r\n}\r\n","import \"../App/reset.scss\";\nimport { TaskList } from \"../TaskList/TaskList\";\nimport { Loader } from \"../Loader/Loader\";\nimport React, { useState, useEffect } from \"react\";\nimport { TodoAppContext } from \"../App/context\";\nimport { ErrorBoundary } from \"../error/ErrorBoundary\";\n\nconst getTodo = () => [\n  {\n    taskName: \"Buy flowers\",\n    id: \"1\",\n    important: false,\n    active: true\n  },\n  {\n    taskName: \"Go shopping\",\n    id: \"2\",\n    important: false,\n    active: false\n  },\n  {\n    taskName: \"learn react\",\n    id: \"3\",\n    important: true,\n    active: true\n  }\n];\nconst filter = (inputFilterValue, todo) => {\n  if (inputFilterValue === \"\") return todo;\n  return todo.filter((item) =>\n    item.taskName.toLowerCase().includes(inputFilterValue.toLowerCase())\n  );\n};\n\nconst btnsFilter = (todo, displayedList) => {\n  if (displayedList === \"\") return todo;\n  if (displayedList === \"all\") return todo;\n  if (displayedList === \"active\") return todo.filter((item) => item.active);\n  if (displayedList === \"complited\") return todo.filter((item) => !item.active);\n};\n\nexport const App = () => {\n  const [todo, setTodo] = useState(null);\n  const [inputFilterValue, setInputFilterValue] = useState(\"\");\n  const [displayedList, setDisplayedList] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const todo = getTodo();\n      setTodo(todo);\n      setIsLoaded(true);\n    }, 3000);\n  }, []);\n\n  if (!isLoaded) {\n    return <Loader />;\n  }\n\n  const filteredList = filter(inputFilterValue, todo);\n  const filteredBtns = btnsFilter(filteredList, displayedList);\n\n  const addTask = (inputAdd) => {\n    const newTodo = todo.slice();\n\n    newTodo.unshift({\n      taskName: inputAdd,\n      id: `${todo.length} + 1`,\n      important: false,\n      active: true\n    });\n\n    setTodo(newTodo);\n  };\n\n  const inactiveTask = (inputId) => {\n    const newTodo = todo.map((item) => {\n      const { id, active } = item;\n\n      return {\n        ...item,\n        active: inputId === id ? !active : active\n      };\n    });\n\n    setTodo(newTodo);\n  };\n\n  const importantTask = (inputId) => {\n    const newTodo = todo.map((item) => {\n      const { id, important } = item;\n\n      return {\n        ...item,\n        important: inputId === id ? !important : important\n      };\n    });\n\n    setTodo(newTodo);\n  };\n  const deleteTask = (inputId) => {\n    const newTodo = todo.filter((item) => {\n      const { id } = item;\n\n      return id !== inputId;\n    });\n\n    setTodo(newTodo);\n  };\n\n  const btnHandler = (displayedList) => {\n    setDisplayedList(displayedList);\n  };\n\n  const inputHandler = (e) => {\n    const { value } = e.target;\n    setInputFilterValue(value);\n  };\n\n  const propsDrill = {\n    importantTask: importantTask,\n    deleteTask: deleteTask,\n    inactiveTask: inactiveTask,\n    btnHandler: btnHandler,\n    inputHandler: inputHandler\n  };\n\n  return (\n    <TodoAppContext.Provider value={propsDrill}>\n      <div>\n        <ErrorBoundary>\n          <TaskList\n            addTask={addTask}\n            todo={filteredBtns}\n            displayedList={displayedList}\n            inputFilterValue={inputFilterValue}\n          />\n        </ErrorBoundary>\n      </div>\n    </TodoAppContext.Provider>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./components/App/App\";\nimport \"./styles.scss\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<App />, rootElement);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}